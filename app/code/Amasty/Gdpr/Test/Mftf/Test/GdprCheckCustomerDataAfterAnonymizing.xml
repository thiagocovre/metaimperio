<?xml version="1.0" encoding="UTF-8"?>
<!--
/**
 * @author Amasty Team
 * @copyright Copyright (c) 2020 Amasty (https://www.amasty.com)
 * @package Amasty_Gdpr
 */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="GdprCheckCustomerDataAfterAnonymizing">
        <annotations>
            <features value="Anonymize Request"/>
            <stories value="Customer Data Is Anonymized"/>
            <title value="Customer Data Is Anonymized"/>
            <description value="Check General Customer Data Is Anonymized On the Address Book, Edit Account Information Page and in the Admin Part"/>
            <severity value="MAJOR"/>
            <testCaseId value="Gdpr-22"/>
            <group value="Gdpr"/>
            <group value="CustomerAccountPrivacySettings"/>
            <group value="AnonymizeRequest"/>
        </annotations>

        <before>
            <createData entity="Simple_US_Customer" stepKey="customer"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="AdminConfigurationsAllowAnonymizingPersonalDataActionGroup" stepKey="setPrivacySettingsOption"/>
        </before>
        <after>
            <actionGroup ref="logout" stepKey="logoutOfAdmin"/>
            <deleteData createDataKey="customer" stepKey="deleteCustomer"/>
        </after>

        <!--anonymize customer data and check in the front part-->
        <actionGroup ref="LoginToStorefrontActionGroup" stepKey="loginToStorefront">
            <argument name="Customer" value="$$customer$$"/>
        </actionGroup>
        <actionGroup ref="StorefrontAnonymizeAccountRequestActionGroup" stepKey="submitAnonymizeRequest">
            <argument name="customerPassword" value="$$customer.password$$"/>
        </actionGroup>
        <actionGroup ref="StorefrontAssertCustomerDefaultBillingAddress" stepKey="checkDefaultBillingData">
            <argument name="customer" value="$$customer$$"/>
            <argument name="address" value="US_Address_TX"/>
        </actionGroup>
        <actionGroup ref="StorefrontAssertCustomerDefaultShippingAddress" stepKey="checkDefaultShippingData">
            <argument name="customer" value="$$customer$$"/>
            <argument name="address" value="US_Address_TX"/>
        </actionGroup>
        <actionGroup ref="StorefrontAssertCustomerAccountInformation" stepKey="assertCustomerAccountInformation">
            <argument name="customer" value="$$customer$$"/>
        </actionGroup>
        <!--check there is no customer on the customers grid by email-->
        <actionGroup ref="NavigateToAllCustomerPage" stepKey="navigateToCustomersGrid"/>
        <actionGroup ref="AdminFilterCustomerGridByEmail" stepKey="filterCustomerByEmail">
            <argument name="email" value="$$customer.email$$"/>
        </actionGroup>
        <actionGroup ref="AdminAssertNoCustomerOnCustomerGridActionGroup" stepKey="checkCustomerOnGrid"/>
        <!--check anonymized customer data in the admin part-->
        <amOnPage url="{{AdminEditCustomerPage.url($$customer.id$$)}}" stepKey="goToCustomerEditPage"/>
        <waitForPageLoad stepKey="waitForCustomerPageLoad"/>
        <!-- assert customer account information -->
        <actionGroup ref="AdminAssertNoCustomerAccountInformation" stepKey="checkCustomerAccountInformation">
            <argument name="customer" value="$$customer$$"/>
        </actionGroup>
        <!-- assert customer default billing address -->
        <actionGroup ref="AdminAssertNoCustomerDefaultBillingAddress" stepKey="checkDefaultBilling">
            <argument name="customer" value="$$customer$$"/>
            <argument name="address" value="US_Address_TX"/>
        </actionGroup>
        <!-- assert customer default shipping address -->
        <actionGroup ref="AdminAssertNoCustomerDefaultShippingAddress" stepKey="checkDefaultShipping">
            <argument name="customer" value="$$customer$$"/>
            <argument name="address" value="US_Address_TX"/>
        </actionGroup>
    </test>
</tests>
